---
- hosts: localhost
  gather_facts: no
  vars:
    state: present
    project_folder: /path/to/your/project/folder
    deployment_package: lambda.zip
    account: 123456789012
    function_name: ingestData

  tasks:
  - name: gather lambda facts
    lambda_facts:
      name: "{{ function_name }}"
      query: all

  - name: AWS Lambda Function
    lambda:
      state: "{{ state | default('present') }}"
      name: "{{ function_name }}"
#      publish: True
      description: lambda funtion test description
      code_s3_bucket: ivcs-package
      code_s3_key: "lambda/{{ deployment_package }}"
      local_path: "{{ project_folder }}/{{ deployment_package }}"
      runtime: python2.7
      timeout: 5
      handler: lambda.handler
      memory_size: 192
      role: API2LambdaExecRole

  - name: "alias 'Dev' for function {{ function_name }}"
    lambda_alias:
      state: "{{ state | default('present') }}"
      function_name: "{{ function_name }}"
      name: Dev
      description: Development is $LATEST version

  - name: S3 event mapping
    lambda_event:
      state: "{{ state | default('present') }}"
      event_source: s3
      function_name: "{{ function_name }}"
#      alias: Dev
      source_params:
        id: lambda-s3-myBucket-create-data-log
        bucket: buzz-scanner
        prefix: twitter
        suffix: log
        events:
        - s3:ObjectCreated:Put

  - name: DynamoDB stream event mapping
    lambda_event:
      state: "{{ state | default('present') }}"
      event_source: stream
      function_name: "{{ function_name }}"
#      alias: Dev
      source_params:
        source_arn: arn:aws:dynamodb:us-east-1:123456789012:table/tableName/stream/2016-03-19T19:51:37.457
        enabled: True
        batch_size: 120
        starting_position: TRIM_HORIZON

  - name: show all stuff...
    debug: var=lambda_facts.function

  - name: show lambda management results...
    debug: var=lambda_results

  - name: show lambda alias results...
    debug: var=lambda_alias_results

  - name: show s3 source event config
    debug: var=lambda_s3_events

  - name: show source event config
    debug: var=lambda_stream_events

  - name: execute lambda function
    lambda_invoke:
      function_name: "{{ function_name }}"
      invocation_type: RequestResponse

  - debug: var=lambda_invocation_results







